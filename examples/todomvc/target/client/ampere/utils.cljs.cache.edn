;; Analyzed by ClojureScript 1.7.107
{:use-macros nil, :excludes #{}, :name ampere.utils, :imports nil, :requires {clojure.set clojure.set}, :uses {difference clojure.set}, :defs {groupEnd {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 33, :column 7, :end-line 33, :end-column 15, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name ampere.utils/groupEnd, :variadic true, :file "target/client/ampere/utils.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, log {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 30, :column 7, :end-line 30, :end-column 10, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name ampere.utils/log, :variadic true, :file "target/client/ampere/utils.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, default-loggers {:name ampere.utils/default-loggers, :file "target/client/ampere/utils.cljs", :line 12, :column 1, :end-line 12, :end-column 21, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 12, :column 6, :end-line 12, :end-column 21}}, loggers {:name ampere.utils/loggers, :file "target/client/ampere/utils.cljs", :line 19, :column 1, :end-line 19, :end-column 13, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 19, :column 6, :end-line 19, :end-column 13}, :doc "Holds the current set of loggers."}, group {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 32, :column 7, :end-line 32, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name ampere.utils/group, :variadic true, :file "target/client/ampere/utils.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, set-loggers! {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([new-loggers])), :doc "Change the set (subset?) of logging functions used by ampere.\n  'new-loggers' should be a map which looks like default-loggers"}, :name ampere.utils/set-loggers!, :variadic false, :file "target/client/ampere/utils.cljs", :end-column 19, :method-params ([new-loggers]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([new-loggers])), :doc "Change the set (subset?) of logging functions used by ampere.\n  'new-loggers' should be a map which looks like default-loggers"}, warn {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 31, :column 7, :end-line 31, :end-column 11, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name ampere.utils/warn, :variadic true, :file "target/client/ampere/utils.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, first-in-vector {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 38, :column 7, :end-line 38, :end-column 22, :arglists (quote ([v]))}, :name ampere.utils/first-in-vector, :variadic false, :file "target/client/ampere/utils.cljs", :end-column 22, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, map-vals {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 43, :column 7, :end-line 43, :end-column 15, :arglists (quote ([f m]))}, :name ampere.utils/map-vals, :variadic false, :file "target/client/ampere/utils.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, error {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/utils.cljs", :line 34, :column 7, :end-line 34, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name ampere.utils/error, :variadic true, :file "target/client/ampere/utils.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{set new-loggers default-loggers :group :warn empty? :error keys :groupEnd difference :log}, :order [:log :warn :error :group :groupEnd empty? difference set keys new-loggers default-loggers]}, :doc nil}