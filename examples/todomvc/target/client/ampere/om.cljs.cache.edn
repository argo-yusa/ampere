;; Analyzed by ClojureScript 1.7.107
{:use-macros {rx freactive.macros}, :excludes #{}, :name ampere.om, :imports nil, :requires {obj goog.object, ampere.utils ampere.utils, ampere.router ampere.router, r freactive.core, goog.object goog.object, freactive.core freactive.core, router ampere.router, ampere.core ampere.core, om.core om.core, om om.core, utils ampere.utils}, :uses {subscribe ampere.core, dispose freactive.core}, :defs {t_ampere$om15658 {:num-fields 9, :protocols #{om.core/IRender om.core/IWillReceiveProps om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name ampere.om/t_ampere$om15658, :file "target/client/ampere/om.cljs", :type true, :anonymous true, :column 3, :line 114, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-key {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/om.cljs", :line 11, :column 7, :end-line 11, :end-column 14, :arglists (quote ([v]))}, :name ampere.om/get-key, :variadic false, :file "target/client/ampere/om.cljs", :end-column 14, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v]))}, ->t_ampere$om15668 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillReceiveProps om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([Wrapper p__15656 owner vec__15667 f cursor m subs meta15669])), :file nil}, :protocols #{om.core/IRender om.core/IWillReceiveProps om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name ampere.om/->t_ampere$om15668, :variadic false, :file "target/client/ampere/om.cljs", :method-params ([Wrapper p__15656 owner vec__15667 f cursor m subs meta15669]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 114, :max-fixed-arity 9, :fn-var true, :arglists (quote ([Wrapper p__15656 owner vec__15667 f cursor m subs meta15669])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, instrument {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/om.cljs", :line 131, :column 7, :end-line 131, :end-column 17, :arglists (quote ([f cursor m])), :doc "Add this as `:instrument` in `om/root` options to enable components having\n  `:subs` in their `:opts` to subscribe to derived data & merge it into props\n  or calling `(ampere.om/observe owner ^{:key optional-key-if-sub-is-dynamic} subscription-vector)`\n  inside render to track subscription.\n  It uses `ampere/subscribe` in more om-ish way."}, :name ampere.om/instrument, :variadic false, :file "target/client/ampere/om.cljs", :end-column 17, :method-params ([f cursor m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f cursor m])), :doc "Add this as `:instrument` in `om/root` options to enable components having\n  `:subs` in their `:opts` to subscribe to derived data & merge it into props\n  or calling `(ampere.om/observe owner ^{:key optional-key-if-sub-is-dynamic} subscription-vector)`\n  inside render to track subscription.\n  It uses `ampere/subscribe` in more om-ish way."}, init! {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/om.cljs", :line 142, :column 7, :end-line 142, :end-column 12, :arglists (quote ([]))}, :name ampere.om/init!, :variadic false, :file "target/client/ampere/om.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, observe {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/om.cljs", :line 105, :column 7, :end-line 105, :end-column 14, :arglists (quote ([c v]))}, :name ampere.om/observe, :variadic false, :file "target/client/ampere/om.cljs", :end-column 14, :method-params ([c v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c v]))}, sub {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/om.cljs", :line 13, :column 7, :end-line 13, :end-column 10, :arglists (quote ([c v]))}, :name ampere.om/sub, :variadic false, :file "target/client/ampere/om.cljs", :end-column 10, :method-params ([c v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c v]))}, Wrapper {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/om.cljs", :line 108, :column 8, :end-line 108, :end-column 15, :private true, :arglists (quote ([[f cursor m subs] owner])), :doc "Wrapper component that tracks reactions and rerender `f` wrappee on their run\n   with their values merged into cursor.\n   E. g. `{:opts {:subs {:x [:sub-id1 params] :y [:sub-id2 params}}}`\n   will inject `{:x @x-reaction :y @y-reaction}` into `f` props."}, :private true, :name ampere.om/Wrapper, :variadic false, :file "target/client/ampere/om.cljs", :end-column 15, :method-params ([p__15656 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[f cursor m subs] owner])), :doc "Wrapper component that tracks reactions and rerender `f` wrappee on their run\n   with their values merged into cursor.\n   E. g. `{:opts {:subs {:x [:sub-id1 params] :y [:sub-id2 params}}}`\n   will inject `{:x @x-reaction :y @y-reaction}` into `f` props."}, upsert-ref {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/om.cljs", :line 91, :column 7, :end-line 91, :end-column 17, :arglists (quote ([c v]))}, :name ampere.om/upsert-ref, :variadic false, :file "target/client/ampere/om.cljs", :end-column 17, :method-params ([c v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c v]))}, unsub {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/om.cljs", :line 23, :column 7, :end-line 23, :end-column 12, :arglists (quote ([c v]))}, :name ampere.om/unsub, :variadic false, :file "target/client/ampere/om.cljs", :end-column 12, :method-params ([c v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([c v]))}, adapt-state {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/om.cljs", :line 30, :column 7, :end-line 30, :end-column 18, :arglists (quote ([state]))}, :name ampere.om/adapt-state, :variadic false, :file "target/client/ampere/om.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, t_ampere$om15668 {:num-fields 9, :protocols #{om.core/IRender om.core/IWillReceiveProps om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name ampere.om/t_ampere$om15668, :file "target/client/ampere/om.cljs", :type true, :anonymous true, :column 3, :line 114, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_ampere$om15658 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillReceiveProps om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([Wrapper p__15656 owner vec__15657 f cursor m subs meta15659])), :file nil}, :protocols #{om.core/IRender om.core/IWillReceiveProps om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name ampere.om/->t_ampere$om15658, :variadic false, :file "target/client/ampere/om.cljs", :method-params ([Wrapper p__15656 owner vec__15657 f cursor m subs meta15659]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 114, :max-fixed-arity 9, :fn-var true, :arglists (quote ([Wrapper p__15656 owner vec__15657 f cursor m subs meta15659])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {freactive.macros freactive.macros, om om.core, om.core om.core}, :cljs.analyzer/constants {:seen #{subs owner vec__15667 :key :private :ampere.om/c :ampere.om/rx :om.core/pass m p__15656 cursor meta15659 Wrapper :opts meta15669 :subs quote :arglists vec__15657 :doc :ampere.om/id f}, :order [:key :ampere.om/rx :ampere.om/id :ampere.om/c Wrapper :private :arglists :doc quote f cursor m subs owner p__15656 vec__15657 meta15659 vec__15667 meta15669 :opts :subs :om.core/pass]}, :doc "Om-specific API"}