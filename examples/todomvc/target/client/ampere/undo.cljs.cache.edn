;; Analyzed by ClojureScript 1.7.107
{:use-macros {rx freactive.macros}, :excludes #{dosync}, :name ampere.undo, :imports nil, :requires {r freactive.core, freactive.core freactive.core, ampere.utils ampere.utils, ampere.db ampere.db, handlers ampere.handlers, ampere.handlers ampere.handlers}, :uses {app-db ampere.db, warn ampere.utils}, :defs {undo-explanations {:name ampere.undo/undo-explanations, :file "target/client/ampere/undo.cljs", :line 36, :column 1, :end-line 36, :end-column 23, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 36, :column 6, :end-line 36, :end-column 23}, :doc "List of undo descriptions."}, dodo-n {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 51, :column 8, :end-line 51, :end-column 14, :private true, :arglists (quote ([from to n])), :doc "Undo/redo until we reach n or run out of undos/redos."}, :private true, :name ampere.undo/dodo-n, :variadic false, :file "target/client/ampere/undo.cljs", :end-column 14, :method-params ([from to n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 3, :fn-var true, :arglists (quote ([from to n])), :doc "Undo/redo until we reach n or run out of undos/redos."}, clear-undos! {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 19, :column 8, :end-line 19, :end-column 20, :private true, :arglists (quote ([]))}, :private true, :name ampere.undo/clear-undos!, :variadic false, :file "target/client/ampere/undo.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, redos? {:name ampere.undo/redos?, :file "target/client/ampere/undo.cljs", :line 34, :column 1, :end-line 34, :end-column 12, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 34, :column 6, :end-line 34, :end-column 12}}, store-now! {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 26, :column 7, :end-line 26, :end-column 17, :arglists (quote ([explanation])), :doc "Stores the value currently in app-db, so the user can later undo."}, :name ampere.undo/store-now!, :variadic false, :file "target/client/ampere/undo.cljs", :end-column 17, :method-params ([explanation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([explanation])), :doc "Stores the value currently in app-db, so the user can later undo."}, redo-list {:name ampere.undo/redo-list, :file "target/client/ampere/undo.cljs", :line 15, :column 1, :end-line 15, :end-column 25, :private true, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 15, :column 16, :end-line 15, :end-column 25, :private true}, :doc "A list of future states, caused by undoing."}, clear-redos! {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 20, :column 8, :end-line 20, :end-column 20, :private true, :arglists (quote ([]))}, :private true, :name ampere.undo/clear-redos!, :variadic false, :file "target/client/ampere/undo.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-max-undos! {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 12, :column 7, :end-line 12, :end-column 21, :arglists (quote ([n]))}, :name ampere.undo/set-max-undos!, :variadic false, :file "target/client/ampere/undo.cljs", :end-column 21, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, max-undos {:name ampere.undo/max-undos, :file "target/client/ampere/undo.cljs", :line 11, :column 1, :end-line 11, :end-column 25, :private true, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 11, :column 16, :end-line 11, :end-column 25, :private true}, :doc "Maximum number of undo states maintained."}, undo-list {:name ampere.undo/undo-list, :file "target/client/ampere/undo.cljs", :line 14, :column 1, :end-line 14, :end-column 25, :private true, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 14, :column 16, :end-line 14, :end-column 25, :private true}, :doc "A list of history states."}, dodo {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 42, :column 8, :end-line 42, :end-column 12, :private true, :arglists (quote ([from to])), :doc "Pass `from` ← `undo-list` and `to` ← `redo-list` to undo,\n   and vice versa to redo."}, :private true, :name ampere.undo/dodo, :variadic false, :file "target/client/ampere/undo.cljs", :end-column 12, :method-params ([from to]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([from to])), :doc "Pass `from` ← `undo-list` and `to` ← `redo-list` to undo,\n   and vice versa to redo."}, clear-history! {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 22, :column 7, :end-line 22, :end-column 21, :arglists (quote ([]))}, :name ampere.undo/clear-history!, :variadic false, :file "target/client/ampere/undo.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, undos? {:name ampere.undo/undos?, :file "target/client/ampere/undo.cljs", :line 33, :column 1, :end-line 33, :end-column 12, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/undo.cljs", :line 33, :column 6, :end-line 33, :end-column 12}}}, :require-macros {freactive.macros freactive.macros}, :cljs.analyzer/constants {:seen #{:explanation :db :redo :undo :purge-redos}, :order [:db :explanation :undo :redo :purge-redos]}, :doc nil}