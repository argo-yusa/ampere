;; Analyzed by ClojureScript 1.7.107
{:name ampere.subs, :doc nil, :excludes #{}, :use-macros {rx freactive.macros}, :require-macros {freactive.macros freactive.macros}, :uses {app-db ampere.db, warn ampere.utils, first-in-vector ampere.utils, error ampere.utils}, :requires {freactive.core freactive.core, obj goog.object, goog.object goog.object, ampere.db ampere.db, ampere.utils ampere.utils}, :imports nil, :defs {key->fn {:name ampere.subs/key->fn, :file "target/client/ampere/subs.cljs", :line 8, :column 1, :end-line 8, :end-column 23, :private true, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/subs.cljs", :line 8, :column 16, :end-line 8, :end-column 23, :private true}, :doc "handler-id → handler-fn"}, cache {:name ampere.subs/cache, :file "target/client/ampere/subs.cljs", :line 9, :column 1, :end-line 9, :end-column 21, :private true, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/subs.cljs", :line 9, :column 16, :end-line 9, :end-column 21, :private true}, :doc "[db v] → rx"}, *cache?* {:name ampere.subs/*cache?*, :file "target/client/ampere/subs.cljs", :line 10, :column 1, :end-line 10, :end-column 24, :dynamic true, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/subs.cljs", :line 10, :column 16, :end-line 10, :end-column 24, :dynamic true}}, clear-handlers! {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/subs.cljs", :line 12, :column 7, :end-line 12, :end-column 22, :arglists (quote ([])), :doc "Unregisters all subscription handlers."}, :name ampere.subs/clear-handlers!, :variadic false, :file "target/client/ampere/subs.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Unregisters all subscription handlers."}, remove-keys {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/subs.cljs", :line 18, :column 7, :end-line 18, :end-column 18, :arglists (quote ([pred m]))}, :name ampere.subs/remove-keys, :variadic false, :file "target/client/ampere/subs.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, register {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/subs.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([key-v handler-fn])), :doc "Registers a handler function for an id."}, :name ampere.subs/register, :variadic false, :file "target/client/ampere/subs.cljs", :end-column 15, :method-params ([key-v handler-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key-v handler-fn])), :doc "Registers a handler function for an id."}, path-handler {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/subs.cljs", :line 29, :column 7, :end-line 29, :end-column 19, :arglists (quote ([db v]))}, :name ampere.subs/path-handler, :variadic false, :file "target/client/ampere/subs.cljs", :end-column 19, :method-params ([db v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db v]))}, subscribe {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/subs.cljs", :line 32, :column 7, :end-line 32, :end-column 16, :arglists (quote ([v] [db v])), :doc "Returns a reaction which observes a part of app-db.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([v] [db v]), :arglists ([v] [db v]), :arglists-meta (nil nil)}}, :name ampere.subs/subscribe, :variadic false, :file "target/client/ampere/subs.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([v] [db v]), :arglists ([v] [db v]), :arglists-meta (nil nil)}, :method-params ([v] [db v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists ([v] [db v]), :doc "Returns a reaction which observes a part of app-db."}, sample {:protocol-inline nil, :meta {:file "/Users/kyusa/GitHub/ampere/examples/todomvc/target/client/ampere/subs.cljs", :line 51, :column 7, :end-line 51, :end-column 13, :arglists (quote ([db v]))}, :name ampere.subs/sample, :variadic false, :file "target/client/ampere/subs.cljs", :end-column 13, :method-params ([db v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db v]))}}}